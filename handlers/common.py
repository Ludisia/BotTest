from aiogram import Router, types, F
from aiogram.filters import Command
from aiogram.utils.keyboard import ReplyKeyboardBuilder
from database import init_db, hash_username, is_admin, create_or_update_user, get_user_laundry_bookings, get_user_restroom_bookings
from aiogram.utils.keyboard import InlineKeyboardBuilder
import datetime

router = Router()

@router.message(Command("start"))
async def send_welcome(message: types.Message):
    user_id = message.from_user.id
    username = message.from_user.username
    create_or_update_user(user_id, username)

    builder = ReplyKeyboardBuilder()
    builder.row(
        types.KeyboardButton(text="–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –≤ –ø—Ä–∞—á–µ—á–Ω—É—é"),
        types.KeyboardButton(text="–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –≤ –∫–æ–º–Ω–∞—Ç—É –æ—Ç–¥—ã—Ö–∞")
    )
    builder.row(types.KeyboardButton(text="–ú–æ–∏ –∑–∞–ø–∏—Å–∏"))

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ —á–µ—Ä–µ–∑ —Ñ—É–Ω–∫—Ü–∏—é is_admin
    if is_admin(user_id):
        builder.row(types.KeyboardButton(text="–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ"))

    await message.answer(
        "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –∑–∞–ø–∏—Å–∏ –≤ –ø—Ä–∞—á–µ—á–Ω—É—é –∏ –∫–æ–º–Ω–∞—Ç—É –æ—Ç–¥—ã—Ö–∞ –æ–±—â–µ–∂–∏—Ç–∏—è ‚Ññ6 –ù–ì–£.\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=builder.as_markup(resize_keyboard=True)
    )


@router.message(F.text == "–ú–æ–∏ –∑–∞–ø–∏—Å–∏")
async def show_my_bookings(message: types.Message):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–ø–∏—Å–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    user_id = message.from_user.id

    # –ü–æ–ª—É—á–∞–µ–º –∑–∞–ø–∏—Å–∏ —á–µ—Ä–µ–∑ —Ñ—É–Ω–∫—Ü–∏–∏ –∏–∑ database.py
    laundry = get_user_laundry_bookings(user_id)
    restroom = get_user_restroom_bookings(user_id)

    if not laundry and not restroom:
        await message.reply("–£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π.")
        return

    response = "–í–∞—à–∏ –∞–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–ø–∏—Å–∏:\n\n"

    if laundry:
        response += "üè† –ü—Ä–∞—á–µ—á–Ω–∞—è:\n"
        for booking in laundry:
            response += (
                f"–ú–∞—à–∏–Ω–∫–∞ ‚Ññ{booking['machine_number']} "
                f"{booking['booking_date']} "
                f"{booking['start_time']}-{booking['end_time']}\n"
            )

    if restroom:
        response += "\nüõãÔ∏è –ö–æ–º–Ω–∞—Ç–∞ –æ—Ç–¥—ã—Ö–∞:\n"
        for booking in restroom:
            response += (
                f"{booking['booking_date']} "
                f"{booking['start_time']}-{booking['end_time']} "
                f"({booking['duration']} –º–∏–Ω)\n"
            )

    # –°–æ–∑–¥–∞–µ–º –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    builder = InlineKeyboardBuilder()
    if laundry:
        builder.button(text="–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–ø–∏—Å—å –≤ –ø—Ä–∞—á–µ—á–Ω—É—é", callback_data="cancel_laundry_menu")
    if restroom:
        builder.button(text="–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–ø–∏—Å—å –≤ –∫–æ–º–Ω–∞—Ç—É –æ—Ç–¥—ã—Ö–∞", callback_data="cancel_restroom_menu")
    builder.adjust(1)

    await message.reply(response, reply_markup=builder.as_markup())


@router.callback_query(F.data == "main_menu")
async def return_to_main_menu(callback: types.CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'"""
    builder = ReplyKeyboardBuilder()
    builder.row(
        types.KeyboardButton(text="–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –≤ –ø—Ä–∞—á–µ—á–Ω—É—é"),
        types.KeyboardButton(text="–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –≤ –∫–æ–º–Ω–∞—Ç—É –æ—Ç–¥—ã—Ö–∞")
    )
    builder.row(types.KeyboardButton(text="–ú–æ–∏ –∑–∞–ø–∏—Å–∏"))

    if is_admin(callback.from_user.id):
        builder.row(types.KeyboardButton(text="–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ"))

    await callback.message.answer(
        "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:",
        reply_markup=builder.as_markup(resize_keyboard=True)
    )
    await callback.answer()


@router.callback_query(F.data == "my_bookings")
async def show_my_bookings_menu(callback: types.CallbackQuery):
    """–û–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ –º–µ–Ω—é –∑–∞–ø–∏—Å–µ–π"""
    user_id = callback.from_user.id

    builder = InlineKeyboardBuilder()

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–ø–∏—Å–∏ –≤ –ø—Ä–∞—á–µ—á–Ω—É—é
    laundry = get_user_laundry_bookings(user_id)
    if laundry:
        builder.button(
            text="–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–ø–∏—Å—å –≤ –ø—Ä–∞—á–µ—á–Ω—É—é",
            callback_data="cancel_laundry_menu"
        )

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–ø–∏—Å–∏ –≤ –∫–æ–º–Ω–∞—Ç—É –æ—Ç–¥—ã—Ö–∞
    restroom = get_user_restroom_bookings(user_id)
    if restroom:
        builder.button(
            text="–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–ø–∏—Å—å –≤ –∫–æ–º–Ω–∞—Ç—É –æ—Ç–¥—ã—Ö–∞",
            callback_data="cancel_restroom_menu"
        )

    builder.button(text="‚Ü©Ô∏è –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")
    builder.adjust(1)

    await callback.message.edit_text(
        "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=builder.as_markup()
    )
    await callback.answer()